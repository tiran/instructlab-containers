name: InstructLab containers

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: read

env:
    IMAGE_NAME: quay.io/tiran/instructlab-containers

jobs:
    container:
        name: "${{ matrix.suffix }} container"
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                include:
                    - containerfile: Containerfile.gfx1100
                      suffix: rocm-gfx1100
                      free_diskspace: true
                    - containerfile: Containerfile.gfx1030
                      suffix: rocm-gfx1030
                      free_diskspace: true
                    - containerfile: Containerfile.cuda
                      suffix: cuda-ubi9
                      free_diskspace: true
                    - containerfile: Containerfile.rocm-ubi9
                      suffix: rocm-ubi9
                      free_diskspace: true
                    - containerfile: Containerfile.cpu
                      suffix: cpu
                      free_diskspace: false
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  submodules: true

            - name: Replace submodule .git reference for setuptools-scm
              run: |
                  set -ex
                  # unset worktree first
                  git -C instructlab config --unset core.worktree
                  # replace file with git directory
                  rm instructlab/.git
                  cp -r .git/modules/instructlab instructlab/.git
                  # verify
                  git -C instructlab show

            - name: Copy RHEL repo file for ROCm
              if: ${{ matrix.suffix == 'rocm-ubi9' }}
              run: |
                  set -e
                  cp rocm60.repo instructlab/containers/rocm/

            - name: Login to Quay.io
              uses: docker/login-action@v3
              with:
                  registry: quay.io
                  username: ${{ secrets.QUAY_USERNAME }}
                  password: ${{ secrets.QUAY_ROBOT_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=${{ matrix.suffix }}

            # container build needs lots of disk space. GHA has limited disk
            # space. Cleanup unnecessary packages.

            - name: Clean /opt and /usr/local
              if: ${{ matrix.free_diskspace }}
              run: |
                  df -h
                  sudo rm -rf /opt/hostedtoolcache
                  sudo rm -rf /opt/ghc
                  sudo rm -rf /usr/local
                  sudo rm -rf /usr/share/dotnet
                  sudo rm -rf /usr/share/swift
                  df -h

            - name: Clean Docker images
              if: ${{ matrix.free_diskspace }}
              run: |
                  docker system prune -a -f
                  df -h

            - name: Clean Debian packages
              if: ${{ matrix.free_diskspace }}
              run: |
                  sudo apt purge -y -f microsoft-edge-stable google-chrome-stable firefox azure-cli google-cloud-cli mono-complete
                  sudo apt autoremove -y
                  sudo apt autoclean -y
                  # sudo dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | head -n20
                  df -h

            - name: Build and export image ${{ steps.meta.outputs.tags }}
              uses: docker/build-push-action@v5
              with:
                  context: instructlab/
                  load: true
                  push: false
                  file: ${{ matrix.containerfile }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  # cache-from: type=gha
                  # cache-to: type=gha

            - name: Test image ${{ steps.meta.outputs.tags }}
              run: |
                  set -e
                  echo "::group::pip list"
                  docker run --rm ${{ steps.meta.outputs.tags }} pip list
                  echo "::endgroup::"

                  echo "::group::ilab version"
                  docker run --rm ${{ steps.meta.outputs.tags }} ilab --version
                  echo "::endgroup::"

                  echo "::group::import torch, llama_cpp"
                  docker run --rm ${{ steps.meta.outputs.tags }} python3 -c 'import torch, llama_cpp'
                  echo "::endgroup::"

            - name: Push image ${{ steps.meta.outputs.tags }}
              if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch' }}
              uses: docker/build-push-action@v5
              with:
                  context: instructlab/
                  push: true
                  file: ${{ matrix.containerfile }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
